## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Restaurant Management'
description: |-

  Restaurant API resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"b08d4686-a0e7-47f6-88fd-1409c5aac00d","attributes":{"name":"Monahan Inc","nameShort":"dolorum","email":"johnson.rogers@example.org","about":"Qui velit quae cumque hic nostrum aut occaecati. Autem excepturi qui ipsam reiciendis nemo ea. Labore ad nihil hic enim non. Autem veniam ea occaecati veritatis.\n\nAt sit blanditiis esse et facilis velit. Dolor vel tempora qui placeat maiores sequi blanditiis. Nobis facere dolor eos ea quisquam cumque qui.\n\nMinima molestiae non quia debitis eveniet velit. Pariatur commodi voluptas et officia enim aliquam.","aboutShort":"Molestiae impedit cum voluptas voluptatum eaque error ut.","phoneNo":"+1-862-418-2339","address":"6310 Dickens Inlet Suite 398","city":"Cristalside","state":"Arizona","postalCode":"25235-3535","latitude":"-1.2920659","longitude":"36.8219462","mapLocation":"-1.252005,36.260963","url":"https:\/\/schoen.com\/adipisci-omnis-nulla-expedita-consequatur-ratione-aut-consequuntur.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2025-02-25T07:08:35.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":{"uuid":"06fd509b-4796-4572-9d0d-003009aa3728","restaurantId":1,"delivery":1,"booking":1},"reviews":[]}},{"id":3,"uuid":"397dad08-de59-4721-8e3b-64a14dab6c61","attributes":{"name":"Tremblay LLC","nameShort":"quae","email":"langosh.sammie@example.com","about":"Odio quia consequatur tempora expedita. Vitae neque accusantium qui laudantium expedita voluptas et. Alias labore et fuga sit est. Unde dolorem consequatur perspiciatis maiores aut iste.\n\nAtque sapiente quas in nostrum perferendis voluptatem. Laborum beatae vel perspiciatis minus dolores. Aliquam aut autem officia quo id. Est rerum numquam impedit a id deserunt nihil voluptatem. Odit consequatur dolores provident amet.\n\nArchitecto quia quis quo. Modi vero exercitationem ad in optio. Delectus sed rerum cumque tenetur quisquam quas enim.","aboutShort":"Et a quo porro.","phoneNo":"484-539-9296","address":"17636 Gladyce Route","city":"East Lance","state":"Washington","postalCode":"62603","latitude":null,"longitude":null,"mapLocation":"-69.0936,-88.971164","url":"http:\/\/nikolaus.net\/quia-qui-aliquam-sunt-ut.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"b83ad034-e97e-4e17-945e-02865be92e74","restaurantId":3,"delivery":1,"booking":1},"reviews":[]}},{"id":4,"uuid":"7ae51c30-52d3-49d0-a2be-cdde62b8a393","attributes":{"name":"VonRueden-Fritsch","nameShort":"inventore","email":"brant.walsh@example.com","about":"Ut officia cupiditate nostrum. Sapiente fugiat tempora officia et sed est dolores.\n\nAssumenda ipsam ad omnis nulla ullam illo aperiam temporibus. Veniam nihil culpa voluptates qui iure. Nisi sapiente autem aut quia.\n\nConsequatur explicabo qui laudantium et sapiente hic. Corrupti quas deleniti labore sint sit qui. Iure voluptatem ipsam quo quia.","aboutShort":"Natus placeat rerum quis ullam iure suscipit.","phoneNo":"510.557.6242","address":"3205 Orin Underpass Suite 011","city":"Hahnland","state":"Texas","postalCode":"53813","latitude":null,"longitude":null,"mapLocation":"8.344758,-94.607432","url":"http:\/\/sawayn.biz\/minima-laborum-beatae-quas","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"afc1a436-cb71-4118-9f5a-3f16c66588c8","restaurantId":4,"delivery":0,"booking":1},"reviews":[]}},{"id":7,"uuid":"1e67f341-37c3-4b0d-b72b-8a918bd8fbf1","attributes":{"name":"McClure-Smith","nameShort":"nisi","email":"elenora78@example.net","about":"Eos voluptatem quasi sint dolores est. Quam assumenda atque eum corporis est dolore cum. Distinctio nihil cum ex cupiditate consequuntur illum asperiores.\n\nAut laudantium adipisci ratione perspiciatis maiores. Numquam quod sunt est voluptatum rerum aspernatur. Tenetur mollitia rerum laborum quod vitae distinctio aut.\n\nPlaceat dolorum fugiat qui sed quae. Ipsam unde a dolor quos magni sit. Cum cupiditate illo a rerum impedit. Esse eveniet maxime atque dolore.","aboutShort":"Earum cupiditate quibusdam odit nostrum architecto.","phoneNo":"+16893817266","address":"29655 Lakin Rue Apt. 912","city":"Angelastad","state":"Ohio","postalCode":"40576","latitude":null,"longitude":null,"mapLocation":"47.61055,-82.708937","url":"http:\/\/www.braun.com\/qui-ducimus-earum-ducimus-repudiandae-voluptatem.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"24024a86-160c-47f5-acdc-c9afca6ed8f7","restaurantId":7,"delivery":0,"booking":1},"reviews":[]}},{"id":8,"uuid":"0bbd16c8-601a-4c7f-95de-08cf4f93e8b7","attributes":{"name":"Shields-Goldner","nameShort":"ut","email":"eschroeder@example.com","about":"Unde iste nostrum ut aliquam animi est et et. Minus iusto voluptatem atque unde earum ut unde numquam. Et voluptatem doloribus quia. Eveniet vitae ipsam commodi.\n\nAb delectus tempora porro sit officiis enim dolore. Et enim sed et libero et.\n\nAb eius eum vel sequi debitis. Molestias inventore assumenda enim. Et tempora dolorum debitis iste et quasi. Dolore aut et dolorem. Ut quia enim odit qui.","aboutShort":"Est aperiam rem sit cumque magni est consequatur.","phoneNo":"(620) 657-8550","address":"8792 Rutherford Crossing","city":"Arliehaven","state":"Alaska","postalCode":"11471","latitude":null,"longitude":null,"mapLocation":"64.172101,-4.478198","url":"http:\/\/www.wehner.com\/voluptatibus-ut-et-aut-corrupti-itaque-qui","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-11-03T12:13:18.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"5d43d156-c45e-4e09-9ca6-d2f5bf3b433d","restaurantId":8,"delivery":1,"booking":0},"reviews":[]}},{"id":14,"uuid":"7b0c0998-d751-46e4-8272-a1c486b1cc6d","attributes":{"name":"Schmitt-Nitzsche","nameShort":"voluptatem","email":"rutherford.keara@example.net","about":"Ut est libero neque nostrum. Velit laboriosam consequatur incidunt omnis est reprehenderit molestiae. Rerum aut voluptatem beatae. Non in qui eius aut cupiditate et saepe quia.\n\nEt et possimus cumque et. Qui deserunt fuga suscipit soluta cum molestias aut. Et labore iure deserunt alias vero. Dolore aliquid nisi et.\n\nCulpa odio consequatur corrupti omnis. Est modi qui ipsum quos.","aboutShort":"Ducimus sed est assumenda in quo eveniet in.","phoneNo":"620-975-1553","address":"1009 Carli Island Suite 073","city":"Nyachester","state":"Delaware","postalCode":"73893","latitude":null,"longitude":null,"mapLocation":"-19.686982,105.148576","url":"https:\/\/www.deckow.com\/voluptatem-repellendus-aut-voluptas-velit-reiciendis-quisquam-consequuntur","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":18,"uuid":"d160a7bf-1913-4a8f-a434-75502b559fb3","attributes":{"name":"Monahan-Wehner","nameShort":"consequatur","email":"etha31@example.org","about":"Laborum ea consequatur odit deleniti. Omnis et laborum soluta praesentium maxime sunt nulla. Velit id earum tenetur dolor quo.\n\nSed et eaque ratione tenetur excepturi exercitationem ex. Adipisci excepturi similique officia sunt nihil. Temporibus atque animi explicabo doloremque non cum. Magnam repudiandae totam rem qui magnam commodi.\n\nAd ex quia quae. Voluptatem expedita suscipit corporis illum sint. Minima consequuntur facilis voluptatem iste omnis necessitatibus illum.","aboutShort":"Officiis repellendus placeat dicta laborum.","phoneNo":"(805) 536-4356","address":"7778 Itzel Highway","city":"Port Terenceport","state":"North Dakota","postalCode":"30146","latitude":null,"longitude":null,"mapLocation":"2.643002,-31.571794","url":"http:\/\/www.marks.com\/rerum-rerum-inventore-atque-hic-voluptates","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":19,"uuid":"a3f83eae-9973-4a09-bc69-ab9afb63c071","attributes":{"name":"Batz-Friesen","nameShort":"pariatur","email":"alexander.ferry@example.org","about":"Et ipsa quia sed non consectetur ipsa corporis. Vero officia asperiores dolor cumque non aut cumque. Sed eveniet facilis rem inventore. Dolore perferendis quia nihil qui similique eos.\n\nRecusandae blanditiis ut amet commodi. Omnis ut et quis iusto est placeat commodi. Quas molestiae dolores et. Omnis quia modi eveniet cumque. Laudantium a harum non nam aut.\n\nAut ut voluptatem quis. Libero culpa quia magni sit laborum quis. Corporis ut quia sequi. Ea laudantium id unde officia rerum saepe. Hic delectus placeat ratione animi doloremque.","aboutShort":"Voluptatibus architecto id in autem enim rerum tempore totam.","phoneNo":"+1-531-288-3854","address":"605 Ahmad Rapids","city":"Lake Cristian","state":"Oregon","postalCode":"67280","latitude":null,"longitude":null,"mapLocation":"-65.764217,149.9543","url":"http:\/\/jaskolski.com\/sapiente-provident-hic-cupiditate-ad-eligendi-corrupti.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":20,"uuid":"0b948c2c-c225-4982-8f5d-d9113fe4d2ee","attributes":{"name":"Abernathy PLC","nameShort":"officiis","email":"rafael11@example.org","about":"Et quia cumque alias reiciendis. Non excepturi est labore corporis. Ex autem nostrum voluptas veniam qui voluptatem vel.\n\nRepudiandae ipsam unde recusandae et tempora quis rerum. Nam natus molestias architecto rem necessitatibus atque. Debitis et architecto ducimus. Occaecati facilis suscipit error qui id tempora provident.\n\nAccusamus et blanditiis veritatis minus et. Eos non totam sunt dolorum voluptas repudiandae voluptas. Mollitia quidem omnis totam neque minima et. Consequuntur tempora ut maxime perferendis blanditiis. Omnis quae molestiae corporis autem quis cum est reiciendis.","aboutShort":"Sint et sit sed earum et et voluptas nihil.","phoneNo":"+1 (803) 860-6528","address":"8182 Lurline Key Suite 746","city":"Lupechester","state":"Minnesota","postalCode":"19965","latitude":null,"longitude":null,"mapLocation":"-86.922509,-116.664233","url":"https:\/\/www.upton.org\/quia-ab-error-assumenda-tempora-et-dolor","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":21,"uuid":"f1ec41d5-6c68-43e5-bd21-0c5e25aad883","attributes":{"name":"Test","nameShort":"Test","email":"partner@test.com","about":"Test about","aboutShort":"Test about","phoneNo":"07073947384","address":"Afya Centre, Nairobi, Kenya","city":null,"state":"NAIROBI","postalCode":"00100","latitude":"-1.2878412","longitude":"36.828085","mapLocation":"https:\/\/maps.google.com\/?q=Afya+Centre&ftid=0x182f11262da332f5:0xa7ea505f9c803a15","url":"https:\/\/www.partner.moboeats.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/WdamSPMY4AlMFXTZZ8cLqbtxhJjHYtNHOvNVBZks.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2024-12-01T12:46:44.000000Z","updated_at":"2025-02-25T07:08:34.000000Z","average_rating":0,"is_open":true,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":22,"uuid":"3fdc9928-1f94-4c0a-ac48-58e9e33a3452","attributes":{"name":"Jonas Poole","nameShort":"Ignatius Hodge","email":"zixo@mailinator.com","about":"Laboriosam lorem la","aboutShort":"Sit deleniti deserun","phoneNo":"+1 (369) 612-8526","address":"Nairobi, Kenya","city":null,"state":"Flynn Goff","postalCode":"Joseph Edwards","latitude":"-1.2878776","longitude":"36.8278033","mapLocation":"https:\/\/maps.google.com\/?cid=9073773803067680901","url":"zawiz@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/cykGuB4znw5RHXmci9lezlwR5a4lqIJAdc7kBQ78.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-03T05:43:43.000000Z","updated_at":"2025-02-25T07:08:34.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":23,"uuid":"62efa477-9050-44d4-ade0-d1ae36640976","attributes":{"name":"Beatrice Hogan","nameShort":"Hedwig Miller","email":"jacevohate@mailinator.com","about":"Ipsam ea optio quis","aboutShort":"Modi qui ut doloribu","phoneNo":"+1 (784) 334-4301","address":"PVR3+VR6, Thika Rd, Nairobi, Kenya","city":null,"state":"Alma Leblanc","postalCode":"James Rich","latitude":"-1.2578257","longitude":"36.8545095","mapLocation":"https:\/\/maps.google.com\/?cid=15709721998860617015","url":"midumufygo@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/D9qD3JwkwE3YPYsiyoHrmMSc5GWtVil8vOdmjqJZ.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-03T05:46:47.000000Z","updated_at":"2025-02-25T07:08:33.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":24,"uuid":"1f73f0e9-6dc9-4866-ba91-7750913ff7c1","attributes":{"name":"Melanie Hotel","nameShort":"Mel Hotel","email":"zisy@mailinator.com","about":"Eaque labore assumen","aboutShort":"Reprehenderit volupt","phoneNo":"+1 (766) 344-2007","address":"Gitanga Road, Nairobi, Kenya","city":null,"state":"Veda Levine","postalCode":"Shelley Olsen","latitude":"-1.284824","longitude":"36.7433191","mapLocation":"https:\/\/maps.google.com\/?cid=16010169149726087168","url":"new@restaurant.com","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-03T05:55:14.000000Z","updated_at":"2025-02-25T07:08:33.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":25,"uuid":"6b43f86e-b6de-4655-ae58-a795748213db","attributes":{"name":"Halee Graham","nameShort":"Robin Vaughn","email":"kedegecaro@mailinator.com","about":"Itaque odio consequa","aboutShort":"Assumenda ut ad expe","phoneNo":"+1 (813) 754-1852","address":"The EXchange, Westlands Rd, Nairobi, Kenya","city":null,"state":"Brittany Gonzales","postalCode":"Chase Fulton","latitude":"-1.2706314","longitude":"36.8107694","mapLocation":"https:\/\/maps.google.com\/?q=The+EXchange&ftid=0x182f173a450becbf:0x8f1ca76a087045f3","url":"dugaqux@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/PNLb05RzmUpVsRAB6zRqVtKqYPJI6FpaoI0NEy0T.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-14T08:20:01.000000Z","updated_at":"2025-02-25T07:08:32.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":26,"uuid":"c6f90083-9618-42ec-92b4-fb60c94c87cc","attributes":{"name":"NAIROBI","nameShort":"Halee Graham","email":"milimokings@gmail.com","about":"TEst","aboutShort":"Test","phoneNo":"0707137687","address":"Limuru Rd, Nairobi, Kenya","city":null,"state":"NAIROBI","postalCode":"00100","latitude":"-1.2118098","longitude":"36.7956872","mapLocation":"https:\/\/maps.google.com\/?cid=14163367451656022425","url":"milimokings@gmail.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/HRS0LYFNhQP4w16aQXG7q7UyBzcoLd1MH9YWQ7MT.png","sitting_capacity":0,"denied_reason":"","created_at":"2025-05-04T07:32:21.000000Z","updated_at":"2025-05-04T07:32:26.000000Z","average_rating":0,"is_open":true,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":27,"uuid":"0c27dafd-ae12-4ca9-b377-2a56f1eb4ef7","attributes":{"name":"Flavia Roman","nameShort":"Barbara Silva","email":"nyfevi@mailinator.com","about":"Iste asperiores dolo","aboutShort":"Illo consequat Quae","phoneNo":"+1 (526) 173-3715","address":"Garrett Sanchez","city":null,"state":"Josephine Craig","postalCode":"Janna Patrick","latitude":null,"longitude":null,"mapLocation":"Nairobi","url":"dunec@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/KaTcNQJVomowS0qw4h4wPLVoIWK54PVZTdqsnj2Q.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-06-11T16:55:04.000000Z","updated_at":"2025-06-11T16:55:04.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"Ke"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":28,"uuid":"8b17f379-6cf7-488c-86d3-97f895fd921c","attributes":{"name":"Kay Stafford","nameShort":"Dorian Turner","email":"gidoq@mailinator.com","about":"Labore sunt volupta","aboutShort":"Nihil adipisicing ma","phoneNo":"+1 (359) 173-3853","address":"Craig Clay","city":null,"state":"Andrew Stephens","postalCode":"Willa Molina","latitude":null,"longitude":null,"mapLocation":"Nairobi","url":"pinyr@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/4WDOWwoZP9ISRwhgqpxfRWBHBm5pMQdrNuRYKKmG.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-06-11T17:05:36.000000Z","updated_at":"2025-06-11T17:05:36.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"Ke"},"relationships":{"questionnaire":null,"reviews":[]}}],"links":{"first":"http:\/\/api.moboeats.test\/api\/v1\/restaurants?page=1","last":"http:\/\/api.moboeats.test\/api\/v1\/restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/api.moboeats.test\/api\/v1\/restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/api.moboeats.test\/api\/v1\/restaurants","per_page":100,"to":17,"total":17}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '296'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rated/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurants ordered by rating.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/api.moboeats.test\/api\/v1\/rated\/restaurants?page=1","last":"http:\/\/api.moboeats.test\/api\/v1\/rated\/restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/api.moboeats.test\/api\/v1\/rated\/restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/api.moboeats.test\/api\/v1\/rated\/restaurants","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '295'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: voluptatem
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      restaurant: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"b08d4686-a0e7-47f6-88fd-1409c5aac00d","attributes":{"name":"Monahan Inc","nameShort":"dolorum","email":"johnson.rogers@example.org","about":"Qui velit quae cumque hic nostrum aut occaecati. Autem excepturi qui ipsam reiciendis nemo ea. Labore ad nihil hic enim non. Autem veniam ea occaecati veritatis.\n\nAt sit blanditiis esse et facilis velit. Dolor vel tempora qui placeat maiores sequi blanditiis. Nobis facere dolor eos ea quisquam cumque qui.\n\nMinima molestiae non quia debitis eveniet velit. Pariatur commodi voluptas et officia enim aliquam.","aboutShort":"Molestiae impedit cum voluptas voluptatum eaque error ut.","phoneNo":"+1-862-418-2339","address":"6310 Dickens Inlet Suite 398","city":"Cristalside","state":"Arizona","postalCode":"25235-3535","latitude":"-1.2920659","longitude":"36.8219462","mapLocation":"-1.252005,36.260963","url":"https:\/\/schoen.com\/adipisci-omnis-nulla-expedita-consequatur-ratione-aut-consequuntur.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2025-02-25T07:08:35.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"operating_hours":[{"id":1,"restaurant_id":1,"day":"Monday","opening_time":"09:30","closing_time":"18:30","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":2,"restaurant_id":1,"day":"Tuesday","opening_time":"09:30","closing_time":"18:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":3,"restaurant_id":1,"day":"Wednesday","opening_time":"09:31","closing_time":"18:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":4,"restaurant_id":1,"day":"Thursday","opening_time":"09:30","closing_time":"21:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":5,"restaurant_id":1,"day":"Friday","opening_time":"09:31","closing_time":"21:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":6,"restaurant_id":1,"day":"Saturday","opening_time":"09:31","closing_time":"22:32","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":7,"restaurant_id":1,"day":"Sunday","opening_time":"21:32","closing_time":"22:32","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"}],"reviews":[]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '294'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/seating-areas
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants/rated
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Rated and Reviewed Restaurants.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","last":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/rated","per_page":15,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '279'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: quae
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      restaurant: quae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"uuid":"b08d4686-a0e7-47f6-88fd-1409c5aac00d","attributes":{"name":"Monahan Inc","nameShort":"dolorum","email":"johnson.rogers@example.org","about":"Qui velit quae cumque hic nostrum aut occaecati. Autem excepturi qui ipsam reiciendis nemo ea. Labore ad nihil hic enim non. Autem veniam ea occaecati veritatis.\n\nAt sit blanditiis esse et facilis velit. Dolor vel tempora qui placeat maiores sequi blanditiis. Nobis facere dolor eos ea quisquam cumque qui.\n\nMinima molestiae non quia debitis eveniet velit. Pariatur commodi voluptas et officia enim aliquam.","aboutShort":"Molestiae impedit cum voluptas voluptatum eaque error ut.","phoneNo":"+1-862-418-2339","address":"6310 Dickens Inlet Suite 398","city":"Cristalside","state":"Arizona","postalCode":"25235-3535","latitude":"-1.2920659","longitude":"36.8219462","mapLocation":"-1.252005,36.260963","url":"https:\/\/schoen.com\/adipisci-omnis-nulla-expedita-consequatur-ratione-aut-consequuntur.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2025-02-25T07:08:35.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"operating_hours":[{"id":1,"restaurant_id":1,"day":"Monday","opening_time":"09:30","closing_time":"18:30","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":2,"restaurant_id":1,"day":"Tuesday","opening_time":"09:30","closing_time":"18:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":3,"restaurant_id":1,"day":"Wednesday","opening_time":"09:31","closing_time":"18:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":4,"restaurant_id":1,"day":"Thursday","opening_time":"09:30","closing_time":"21:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":5,"restaurant_id":1,"day":"Friday","opening_time":"09:31","closing_time":"21:31","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":6,"restaurant_id":1,"day":"Saturday","opening_time":"09:31","closing_time":"22:32","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"},{"id":7,"restaurant_id":1,"day":"Sunday","opening_time":"21:32","closing_time":"22:32","created_at":"2024-10-08T10:32:22.000000Z","updated_at":"2024-10-08T10:32:22.000000Z"}],"reviews":[]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '278'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-grocery-shops
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Grocery SHops'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":21,"uuid":"f1ec41d5-6c68-43e5-bd21-0c5e25aad883","attributes":{"name":"Test","nameShort":"Test","email":"partner@test.com","about":"Test about","aboutShort":"Test about","phoneNo":"07073947384","address":"Afya Centre, Nairobi, Kenya","city":null,"state":"NAIROBI","postalCode":"00100","latitude":"-1.2878412","longitude":"36.828085","mapLocation":"https:\/\/maps.google.com\/?q=Afya+Centre&ftid=0x182f11262da332f5:0xa7ea505f9c803a15","url":"https:\/\/www.partner.moboeats.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/WdamSPMY4AlMFXTZZ8cLqbtxhJjHYtNHOvNVBZks.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2024-12-01T12:46:44.000000Z","updated_at":"2025-02-25T07:08:34.000000Z","average_rating":0,"is_open":true,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}}],"links":{"first":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","last":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-grocery-shops","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '276'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"uuid":"b08d4686-a0e7-47f6-88fd-1409c5aac00d","attributes":{"name":"Monahan Inc","nameShort":"dolorum","email":"johnson.rogers@example.org","about":"Qui velit quae cumque hic nostrum aut occaecati. Autem excepturi qui ipsam reiciendis nemo ea. Labore ad nihil hic enim non. Autem veniam ea occaecati veritatis.\n\nAt sit blanditiis esse et facilis velit. Dolor vel tempora qui placeat maiores sequi blanditiis. Nobis facere dolor eos ea quisquam cumque qui.\n\nMinima molestiae non quia debitis eveniet velit. Pariatur commodi voluptas et officia enim aliquam.","aboutShort":"Molestiae impedit cum voluptas voluptatum eaque error ut.","phoneNo":"+1-862-418-2339","address":"6310 Dickens Inlet Suite 398","city":"Cristalside","state":"Arizona","postalCode":"25235-3535","latitude":"-1.2920659","longitude":"36.8219462","mapLocation":"-1.252005,36.260963","url":"https:\/\/schoen.com\/adipisci-omnis-nulla-expedita-consequatur-ratione-aut-consequuntur.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2025-02-25T07:08:35.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":{"uuid":"06fd509b-4796-4572-9d0d-003009aa3728","restaurantId":1,"delivery":1,"booking":1},"reviews":[]}},{"id":3,"uuid":"397dad08-de59-4721-8e3b-64a14dab6c61","attributes":{"name":"Tremblay LLC","nameShort":"quae","email":"langosh.sammie@example.com","about":"Odio quia consequatur tempora expedita. Vitae neque accusantium qui laudantium expedita voluptas et. Alias labore et fuga sit est. Unde dolorem consequatur perspiciatis maiores aut iste.\n\nAtque sapiente quas in nostrum perferendis voluptatem. Laborum beatae vel perspiciatis minus dolores. Aliquam aut autem officia quo id. Est rerum numquam impedit a id deserunt nihil voluptatem. Odit consequatur dolores provident amet.\n\nArchitecto quia quis quo. Modi vero exercitationem ad in optio. Delectus sed rerum cumque tenetur quisquam quas enim.","aboutShort":"Et a quo porro.","phoneNo":"484-539-9296","address":"17636 Gladyce Route","city":"East Lance","state":"Washington","postalCode":"62603","latitude":null,"longitude":null,"mapLocation":"-69.0936,-88.971164","url":"http:\/\/nikolaus.net\/quia-qui-aliquam-sunt-ut.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"b83ad034-e97e-4e17-945e-02865be92e74","restaurantId":3,"delivery":1,"booking":1},"reviews":[]}},{"id":4,"uuid":"7ae51c30-52d3-49d0-a2be-cdde62b8a393","attributes":{"name":"VonRueden-Fritsch","nameShort":"inventore","email":"brant.walsh@example.com","about":"Ut officia cupiditate nostrum. Sapiente fugiat tempora officia et sed est dolores.\n\nAssumenda ipsam ad omnis nulla ullam illo aperiam temporibus. Veniam nihil culpa voluptates qui iure. Nisi sapiente autem aut quia.\n\nConsequatur explicabo qui laudantium et sapiente hic. Corrupti quas deleniti labore sint sit qui. Iure voluptatem ipsam quo quia.","aboutShort":"Natus placeat rerum quis ullam iure suscipit.","phoneNo":"510.557.6242","address":"3205 Orin Underpass Suite 011","city":"Hahnland","state":"Texas","postalCode":"53813","latitude":null,"longitude":null,"mapLocation":"8.344758,-94.607432","url":"http:\/\/sawayn.biz\/minima-laborum-beatae-quas","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"afc1a436-cb71-4118-9f5a-3f16c66588c8","restaurantId":4,"delivery":0,"booking":1},"reviews":[]}},{"id":7,"uuid":"1e67f341-37c3-4b0d-b72b-8a918bd8fbf1","attributes":{"name":"McClure-Smith","nameShort":"nisi","email":"elenora78@example.net","about":"Eos voluptatem quasi sint dolores est. Quam assumenda atque eum corporis est dolore cum. Distinctio nihil cum ex cupiditate consequuntur illum asperiores.\n\nAut laudantium adipisci ratione perspiciatis maiores. Numquam quod sunt est voluptatum rerum aspernatur. Tenetur mollitia rerum laborum quod vitae distinctio aut.\n\nPlaceat dolorum fugiat qui sed quae. Ipsam unde a dolor quos magni sit. Cum cupiditate illo a rerum impedit. Esse eveniet maxime atque dolore.","aboutShort":"Earum cupiditate quibusdam odit nostrum architecto.","phoneNo":"+16893817266","address":"29655 Lakin Rue Apt. 912","city":"Angelastad","state":"Ohio","postalCode":"40576","latitude":null,"longitude":null,"mapLocation":"47.61055,-82.708937","url":"http:\/\/www.braun.com\/qui-ducimus-earum-ducimus-repudiandae-voluptatem.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"24024a86-160c-47f5-acdc-c9afca6ed8f7","restaurantId":7,"delivery":0,"booking":1},"reviews":[]}},{"id":8,"uuid":"0bbd16c8-601a-4c7f-95de-08cf4f93e8b7","attributes":{"name":"Shields-Goldner","nameShort":"ut","email":"eschroeder@example.com","about":"Unde iste nostrum ut aliquam animi est et et. Minus iusto voluptatem atque unde earum ut unde numquam. Et voluptatem doloribus quia. Eveniet vitae ipsam commodi.\n\nAb delectus tempora porro sit officiis enim dolore. Et enim sed et libero et.\n\nAb eius eum vel sequi debitis. Molestias inventore assumenda enim. Et tempora dolorum debitis iste et quasi. Dolore aut et dolorem. Ut quia enim odit qui.","aboutShort":"Est aperiam rem sit cumque magni est consequatur.","phoneNo":"(620) 657-8550","address":"8792 Rutherford Crossing","city":"Arliehaven","state":"Alaska","postalCode":"11471","latitude":null,"longitude":null,"mapLocation":"64.172101,-4.478198","url":"http:\/\/www.wehner.com\/voluptatibus-ut-et-aut-corrupti-itaque-qui","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-11-03T12:13:18.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":{"uuid":"5d43d156-c45e-4e09-9ca6-d2f5bf3b433d","restaurantId":8,"delivery":1,"booking":0},"reviews":[]}},{"id":14,"uuid":"7b0c0998-d751-46e4-8272-a1c486b1cc6d","attributes":{"name":"Schmitt-Nitzsche","nameShort":"voluptatem","email":"rutherford.keara@example.net","about":"Ut est libero neque nostrum. Velit laboriosam consequatur incidunt omnis est reprehenderit molestiae. Rerum aut voluptatem beatae. Non in qui eius aut cupiditate et saepe quia.\n\nEt et possimus cumque et. Qui deserunt fuga suscipit soluta cum molestias aut. Et labore iure deserunt alias vero. Dolore aliquid nisi et.\n\nCulpa odio consequatur corrupti omnis. Est modi qui ipsum quos.","aboutShort":"Ducimus sed est assumenda in quo eveniet in.","phoneNo":"620-975-1553","address":"1009 Carli Island Suite 073","city":"Nyachester","state":"Delaware","postalCode":"73893","latitude":null,"longitude":null,"mapLocation":"-19.686982,105.148576","url":"https:\/\/www.deckow.com\/voluptatem-repellendus-aut-voluptas-velit-reiciendis-quisquam-consequuntur","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":18,"uuid":"d160a7bf-1913-4a8f-a434-75502b559fb3","attributes":{"name":"Monahan-Wehner","nameShort":"consequatur","email":"etha31@example.org","about":"Laborum ea consequatur odit deleniti. Omnis et laborum soluta praesentium maxime sunt nulla. Velit id earum tenetur dolor quo.\n\nSed et eaque ratione tenetur excepturi exercitationem ex. Adipisci excepturi similique officia sunt nihil. Temporibus atque animi explicabo doloremque non cum. Magnam repudiandae totam rem qui magnam commodi.\n\nAd ex quia quae. Voluptatem expedita suscipit corporis illum sint. Minima consequuntur facilis voluptatem iste omnis necessitatibus illum.","aboutShort":"Officiis repellendus placeat dicta laborum.","phoneNo":"(805) 536-4356","address":"7778 Itzel Highway","city":"Port Terenceport","state":"North Dakota","postalCode":"30146","latitude":null,"longitude":null,"mapLocation":"2.643002,-31.571794","url":"http:\/\/www.marks.com\/rerum-rerum-inventore-atque-hic-voluptates","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":19,"uuid":"a3f83eae-9973-4a09-bc69-ab9afb63c071","attributes":{"name":"Batz-Friesen","nameShort":"pariatur","email":"alexander.ferry@example.org","about":"Et ipsa quia sed non consectetur ipsa corporis. Vero officia asperiores dolor cumque non aut cumque. Sed eveniet facilis rem inventore. Dolore perferendis quia nihil qui similique eos.\n\nRecusandae blanditiis ut amet commodi. Omnis ut et quis iusto est placeat commodi. Quas molestiae dolores et. Omnis quia modi eveniet cumque. Laudantium a harum non nam aut.\n\nAut ut voluptatem quis. Libero culpa quia magni sit laborum quis. Corporis ut quia sequi. Ea laudantium id unde officia rerum saepe. Hic delectus placeat ratione animi doloremque.","aboutShort":"Voluptatibus architecto id in autem enim rerum tempore totam.","phoneNo":"+1-531-288-3854","address":"605 Ahmad Rapids","city":"Lake Cristian","state":"Oregon","postalCode":"67280","latitude":null,"longitude":null,"mapLocation":"-65.764217,149.9543","url":"http:\/\/jaskolski.com\/sapiente-provident-hic-cupiditate-ad-eligendi-corrupti.html","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":20,"uuid":"0b948c2c-c225-4982-8f5d-d9113fe4d2ee","attributes":{"name":"Abernathy PLC","nameShort":"officiis","email":"rafael11@example.org","about":"Et quia cumque alias reiciendis. Non excepturi est labore corporis. Ex autem nostrum voluptas veniam qui voluptatem vel.\n\nRepudiandae ipsam unde recusandae et tempora quis rerum. Nam natus molestias architecto rem necessitatibus atque. Debitis et architecto ducimus. Occaecati facilis suscipit error qui id tempora provident.\n\nAccusamus et blanditiis veritatis minus et. Eos non totam sunt dolorum voluptas repudiandae voluptas. Mollitia quidem omnis totam neque minima et. Consequuntur tempora ut maxime perferendis blanditiis. Omnis quae molestiae corporis autem quis cum est reiciendis.","aboutShort":"Sint et sit sed earum et et voluptas nihil.","phoneNo":"+1 (803) 860-6528","address":"8182 Lurline Key Suite 746","city":"Lupechester","state":"Minnesota","postalCode":"19965","latitude":null,"longitude":null,"mapLocation":"-86.922509,-116.664233","url":"https:\/\/www.upton.org\/quia-ab-error-assumenda-tempora-et-dolor","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":null,"denied_reason":"","created_at":"2024-10-04T15:31:38.000000Z","updated_at":"2024-10-04T15:31:38.000000Z","average_rating":0,"is_open":false,"country":null,"country_code":null},"relationships":{"questionnaire":null,"reviews":[]}},{"id":21,"uuid":"f1ec41d5-6c68-43e5-bd21-0c5e25aad883","attributes":{"name":"Test","nameShort":"Test","email":"partner@test.com","about":"Test about","aboutShort":"Test about","phoneNo":"07073947384","address":"Afya Centre, Nairobi, Kenya","city":null,"state":"NAIROBI","postalCode":"00100","latitude":"-1.2878412","longitude":"36.828085","mapLocation":"https:\/\/maps.google.com\/?q=Afya+Centre&ftid=0x182f11262da332f5:0xa7ea505f9c803a15","url":"https:\/\/www.partner.moboeats.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/WdamSPMY4AlMFXTZZ8cLqbtxhJjHYtNHOvNVBZks.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2024-12-01T12:46:44.000000Z","updated_at":"2025-02-25T07:08:34.000000Z","average_rating":0,"is_open":true,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":22,"uuid":"3fdc9928-1f94-4c0a-ac48-58e9e33a3452","attributes":{"name":"Jonas Poole","nameShort":"Ignatius Hodge","email":"zixo@mailinator.com","about":"Laboriosam lorem la","aboutShort":"Sit deleniti deserun","phoneNo":"+1 (369) 612-8526","address":"Nairobi, Kenya","city":null,"state":"Flynn Goff","postalCode":"Joseph Edwards","latitude":"-1.2878776","longitude":"36.8278033","mapLocation":"https:\/\/maps.google.com\/?cid=9073773803067680901","url":"zawiz@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/cykGuB4znw5RHXmci9lezlwR5a4lqIJAdc7kBQ78.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-03T05:43:43.000000Z","updated_at":"2025-02-25T07:08:34.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":23,"uuid":"62efa477-9050-44d4-ade0-d1ae36640976","attributes":{"name":"Beatrice Hogan","nameShort":"Hedwig Miller","email":"jacevohate@mailinator.com","about":"Ipsam ea optio quis","aboutShort":"Modi qui ut doloribu","phoneNo":"+1 (784) 334-4301","address":"PVR3+VR6, Thika Rd, Nairobi, Kenya","city":null,"state":"Alma Leblanc","postalCode":"James Rich","latitude":"-1.2578257","longitude":"36.8545095","mapLocation":"https:\/\/maps.google.com\/?cid=15709721998860617015","url":"midumufygo@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/D9qD3JwkwE3YPYsiyoHrmMSc5GWtVil8vOdmjqJZ.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-03T05:46:47.000000Z","updated_at":"2025-02-25T07:08:33.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":24,"uuid":"1f73f0e9-6dc9-4866-ba91-7750913ff7c1","attributes":{"name":"Melanie Hotel","nameShort":"Mel Hotel","email":"zisy@mailinator.com","about":"Eaque labore assumen","aboutShort":"Reprehenderit volupt","phoneNo":"+1 (766) 344-2007","address":"Gitanga Road, Nairobi, Kenya","city":null,"state":"Veda Levine","postalCode":"Shelley Olsen","latitude":"-1.284824","longitude":"36.7433191","mapLocation":"https:\/\/maps.google.com\/?cid=16010169149726087168","url":"new@restaurant.com","logo":"http:\/\/api.moboeats.test\/assets\/user\/default.png","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-03T05:55:14.000000Z","updated_at":"2025-02-25T07:08:33.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":25,"uuid":"6b43f86e-b6de-4655-ae58-a795748213db","attributes":{"name":"Halee Graham","nameShort":"Robin Vaughn","email":"kedegecaro@mailinator.com","about":"Itaque odio consequa","aboutShort":"Assumenda ut ad expe","phoneNo":"+1 (813) 754-1852","address":"The EXchange, Westlands Rd, Nairobi, Kenya","city":null,"state":"Brittany Gonzales","postalCode":"Chase Fulton","latitude":"-1.2706314","longitude":"36.8107694","mapLocation":"https:\/\/maps.google.com\/?q=The+EXchange&ftid=0x182f173a450becbf:0x8f1ca76a087045f3","url":"dugaqux@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/PNLb05RzmUpVsRAB6zRqVtKqYPJI6FpaoI0NEy0T.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-02-14T08:20:01.000000Z","updated_at":"2025-02-25T07:08:32.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":26,"uuid":"c6f90083-9618-42ec-92b4-fb60c94c87cc","attributes":{"name":"NAIROBI","nameShort":"Halee Graham","email":"milimokings@gmail.com","about":"TEst","aboutShort":"Test","phoneNo":"0707137687","address":"Limuru Rd, Nairobi, Kenya","city":null,"state":"NAIROBI","postalCode":"00100","latitude":"-1.2118098","longitude":"36.7956872","mapLocation":"https:\/\/maps.google.com\/?cid=14163367451656022425","url":"milimokings@gmail.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/HRS0LYFNhQP4w16aQXG7q7UyBzcoLd1MH9YWQ7MT.png","sitting_capacity":0,"denied_reason":"","created_at":"2025-05-04T07:32:21.000000Z","updated_at":"2025-05-04T07:32:26.000000Z","average_rating":0,"is_open":true,"country":"Kenya","country_code":"KE"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":27,"uuid":"0c27dafd-ae12-4ca9-b377-2a56f1eb4ef7","attributes":{"name":"Flavia Roman","nameShort":"Barbara Silva","email":"nyfevi@mailinator.com","about":"Iste asperiores dolo","aboutShort":"Illo consequat Quae","phoneNo":"+1 (526) 173-3715","address":"Garrett Sanchez","city":null,"state":"Josephine Craig","postalCode":"Janna Patrick","latitude":null,"longitude":null,"mapLocation":"Nairobi","url":"dunec@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/KaTcNQJVomowS0qw4h4wPLVoIWK54PVZTdqsnj2Q.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-06-11T16:55:04.000000Z","updated_at":"2025-06-11T16:55:04.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"Ke"},"relationships":{"questionnaire":null,"reviews":[]}},{"id":28,"uuid":"8b17f379-6cf7-488c-86d3-97f895fd921c","attributes":{"name":"Kay Stafford","nameShort":"Dorian Turner","email":"gidoq@mailinator.com","about":"Labore sunt volupta","aboutShort":"Nihil adipisicing ma","phoneNo":"+1 (359) 173-3853","address":"Craig Clay","city":null,"state":"Andrew Stephens","postalCode":"Willa Molina","latitude":null,"longitude":null,"mapLocation":"Nairobi","url":"pinyr@mailinator.com","logo":"http:\/\/api.moboeats.test\/storage\/companyLogos\/logos\/4WDOWwoZP9ISRwhgqpxfRWBHBm5pMQdrNuRYKKmG.jpg","sitting_capacity":0,"denied_reason":"","created_at":"2025-06-11T17:05:36.000000Z","updated_at":"2025-06-11T17:05:36.000000Z","average_rating":0,"is_open":false,"country":"Kenya","country_code":"Ke"},"relationships":{"questionnaire":null,"reviews":[]}}],"links":{"first":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","last":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants","per_page":100,"to":17,"total":17}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '275'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/orderer-restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: voluptatibus
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: natus
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: dietrich.freida@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: impedit
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: sequi
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: tenetur
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: false
        example: 6
        type: integer
        custom: []
    cleanBodyParameters:
      name: voluptatibus
      name_short: natus
      email: dietrich.freida@example.com
      about: impedit
      about_short: sequi
      logo: tenetur
      sitting_capacity: 6
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: et
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: necessitatibus
        type: string
        custom: []
    cleanUrlParameters:
      id: et
      restaurant: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"Error has occured...","message":"Restaurant record not found.","data":"Restaurant Not Found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '274'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: quo
        type: string
        custom: []
    cleanUrlParameters:
      id: quo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: blanda.rylan@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: dolores
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: ad
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: accusantium
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: doloremque
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: iusto
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: molestiae
        type: string
        custom: []
    cleanBodyParameters:
      name: voluptatem
      name_short: quis
      email: blanda.rylan@example.org
      about: dolores
      about_short: ad
      phone_no: accusantium
      address: ut
      state: doloremque
      postal_code: assumenda
      latitude: iusto
      longitude: molestiae
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/orderer/orderer-restaurants/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the orderer restaurant.'
        required: true
        example: repudiandae
        type: string
        custom: []
    cleanUrlParameters:
      id: repudiandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/orderer/orderer-restaurants/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"Request was succesful","message":null,"data":{"current_page":1,"data":[],"first_page_url":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/b08d4686-a0e7-47f6-88fd-1409c5aac00d\/tables?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/b08d4686-a0e7-47f6-88fd-1409c5aac00d\/tables?page=1","links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/b08d4686-a0e7-47f6-88fd-1409c5aac00d\/tables?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/api.moboeats.test\/api\/v1\/orderer\/orderer-restaurants\/b08d4686-a0e7-47f6-88fd-1409c5aac00d\/tables","per_page":10,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '300'
          x-ratelimit-remaining: '261'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/orderer/restaurant/reviews/store
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store review for a restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      restaurant_id:
        name: restaurant_id
        description: 'The id of the restaurant'
        required: false
        example: 1
        type: integer
        custom: []
      rating:
        name: rating
        description: 'The rating from 1 - 5'
        required: false
        example: 18
        type: integer
        custom: []
      review:
        name: review
        description: 'A review of the restaurant'
        required: false
        example: magni
        type: string
        custom: []
    cleanBodyParameters:
      restaurant_id: 1
      rating: 18
      review: magni
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/rider/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: recusandae
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: iste
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: barry.daugherty@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: exercitationem
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: non
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: false
        example: 4
        type: integer
        custom: []
    cleanBodyParameters:
      name: recusandae
      name_short: iste
      email: barry.daugherty@example.org
      about: assumenda
      about_short: exercitationem
      logo: non
      sitting_capacity: 4
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      restaurant: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: delectus
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: eius
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: hubert.halvorson@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: id
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: suscipit
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: sunt
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: molestiae
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: adipisci
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: non
        type: string
        custom: []
    cleanBodyParameters:
      name: delectus
      name_short: eius
      email: hubert.halvorson@example.net
      about: id
      about_short: suscipit
      phone_no: debitis
      address: temporibus
      state: sunt
      postal_code: molestiae
      latitude: adipisci
      longitude: non
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/rider/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurant
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: alias
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: estrella13@example.org
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: laudantium
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: provident
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: false
        example: 10
        type: integer
        custom: []
    cleanBodyParameters:
      name: alias
      name_short: aut
      email: estrella13@example.org
      about: laudantium
      about_short: aut
      logo: provident
      sitting_capacity: 10
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/{restaurant_uuid}/registration/fee-payment'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/registration/fee-payment/complete'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/dashboard
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Restaurant Details'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: voluptates
        type: string
        custom: []
    cleanUrlParameters:
      uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      restaurant: voluptates
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/reviews'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/restaurant/restaurants
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: alyson78@example.com
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: distinctio
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: tempora
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: false
        example: null
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: false
        example: null
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: true
        example: pariatur
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      sitting_capacity:
        name: sitting_capacity
        description: ''
        required: false
        example: 13
        type: integer
        custom: []
    cleanBodyParameters:
      name: repellendus
      name_short: eos
      email: alyson78@example.com
      about: distinctio
      about_short: tempora
      logo: pariatur
      sitting_capacity: 13
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: nam
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: lia72@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: non
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: voluptates
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: quos
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: reprehenderit
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: qui
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: ut
        type: string
        custom: []
    cleanBodyParameters:
      name: nam
      name_short: voluptatem
      email: lia72@example.net
      about: non
      about_short: ut
      phone_no: voluptates
      address: quos
      state: nihil
      postal_code: reprehenderit
      latitude: qui
      longitude: ut
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/restaurant/restaurants/{uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      uuid:
        name: uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/restaurants/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/restaurants/{restaurant_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ibrahim43@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: expedita
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: ea
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: harum
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: magni
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: neque
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanBodyParameters:
      name: ut
      name_short: deleniti
      email: ibrahim43@example.net
      about: expedita
      about_short: ea
      phone_no: harum
      address: magni
      state: vitae
      postal_code: debitis
      latitude: neque
      longitude: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/riders/{id}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the rider.'
        required: true
        example: assumenda
        type: string
        custom: []
    cleanUrlParameters:
      id: assumenda
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/payments/export/data
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/reservations
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/tables
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/tables'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/tables/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new table for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: aperiam
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      name: quia
      seating_area_id: aperiam
      seat_number: et
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/tables/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a table'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: necessitatibus
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: 50446f6c-5b59-35be-bb88-75646153720b
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      id: necessitatibus
      uuid: 50446f6c-5b59-35be-bb88-75646153720b
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      seating_area_id:
        name: seating_area_id
        description: ''
        required: true
        example: animi
        type: string
        custom: []
      seat_number:
        name: seat_number
        description: ''
        required: true
        example: sed
        type: string
        custom: []
    cleanBodyParameters:
      name: quia
      seating_area_id: animi
      seat_number: sed
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/payments'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/sitting-areas'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Restaurant Available Seating Areas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      restaurant:
        name: restaurant
        description: 'The ID of the restaurant'
        required: false
        example: rem
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      restaurant: rem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/reservations'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/orders'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/restaurant/{restaurant_uuid}/menu'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: "Restaurant's Menu"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      restaurant_id:
        name: restaurant_id
        description: 'The id of the restaurant'
        required: false
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      restaurant_id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/{restaurant}/categories'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Categories added by the restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      id:
        name: id
        description: 'The ID or the UUID of the restaurant'
        required: false
        example: natus
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      id: natus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant_uuid}/categories/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new category for the specified restaurant'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: repellat
        type: string
        custom: []
    cleanBodyParameters:
      title: nulla
      description: repellat
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/{restaurant}/categories/{id}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant:
        name: restaurant
        description: 'The restaurant.'
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
      id:
        name: id
        description: 'The id of the category'
        required: false
        example: placeat
        type: string
        custom: []
      uuid:
        name: uuid
        description: 'The uuid of the restaurant'
        required: false
        example: a1a8f633-e97a-30ec-8fbf-ad36eefc6cbb
        type: string
        custom: []
    cleanUrlParameters:
      restaurant: b08d4686-a0e7-47f6-88fd-1409c5aac00d
      id: placeat
      uuid: a1a8f633-e97a-30ec-8fbf-ad36eefc6cbb
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: quas
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
    cleanBodyParameters:
      title: quas
      description: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/restaurant/employees
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{restaurant_uuid}/add'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: id
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: similique
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: qhoe
        type: string
        custom: []
    cleanBodyParameters:
      first_name: voluptatem
      last_name: id
      email: similique
      phone_number: rerum
      avatar: qhoe
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/restaurant/employees/{user_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_uuid:
        name: user_uuid
        description: ''
        required: true
        example: 963cf3dd-22d9-457a-9965-c17be2cc5058
        type: string
        custom: []
    cleanUrlParameters:
      user_uuid: 963cf3dd-22d9-457a-9965-c17be2cc5058
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: quae
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: expedita
        type: string
        custom: []
      avatar:
        name: avatar
        description: 'Must not be greater than 9000 characters.'
        required: false
        example: iedogjjgfk
        type: string
        custom: []
      suspend:
        name: suspend
        description: 'Must be one of <code>1</code> or <code>2</code>.'
        required: true
        example: '1'
        type: string
        custom: []
    cleanBodyParameters:
      first_name: quae
      last_name: qui
      email: temporibus
      phone_number: expedita
      avatar: iedogjjgfk
      suspend: '1'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/restaurants/{restaurant_uuid}/update'
    metadata:
      groupName: 'Restaurant Management'
      groupDescription: |-

        Restaurant API resource
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      restaurant_uuid:
        name: restaurant_uuid
        description: ''
        required: true
        example: b08d4686-a0e7-47f6-88fd-1409c5aac00d
        type: string
        custom: []
    cleanUrlParameters:
      restaurant_uuid: b08d4686-a0e7-47f6-88fd-1409c5aac00d
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: assumenda
        type: string
        custom: []
      name_short:
        name: name_short
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: chet35@example.net
        type: string
        custom: []
      about:
        name: about
        description: ''
        required: true
        example: aspernatur
        type: string
        custom: []
      about_short:
        name: about_short
        description: ''
        required: true
        example: minima
        type: string
        custom: []
      phone_no:
        name: phone_no
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: animi
        type: string
        custom: []
      state:
        name: state
        description: ''
        required: true
        example: exercitationem
        type: string
        custom: []
      postal_code:
        name: postal_code
        description: ''
        required: true
        example: corrupti
        type: string
        custom: []
      map_location:
        name: map_location
        description: ''
        required: false
        example: null
        type: string
        custom: []
      url:
        name: url
        description: ''
        required: false
        example: null
        type: string
        custom: []
      logo:
        name: logo
        description: ''
        required: false
        example: null
        type: string
        custom: []
      latitude:
        name: latitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: aut
        type: string
        custom: []
      longitude:
        name: longitude
        description: 'Must not be one of <code>null</code>.'
        required: true
        example: est
        type: string
        custom: []
    cleanBodyParameters:
      name: assumenda
      name_short: omnis
      email: chet35@example.net
      about: aspernatur
      about_short: minima
      phone_no: quis
      address: animi
      state: exercitationem
      postal_code: corrupti
      latitude: aut
      longitude: est
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
